https://blog.csdn.net/Hello_JavaScript/article/details/104711667

## SOLUTION
WITH trans as (
SELECT DATA_FRMATE(trans_date,'%Y-%m') AS month, 
	   country, 
	   SUM(CASE WHEN state='approved' THEN 1 ELSE 0 END) AS approved_count, 
	   SUM(CASE WHEN state='approved' THEN amount ELSE 0 END) AS approved_amount,
FROM Transactions t
GROUP BY DATA_FRMATE(trans_date,'%Y-%m'),country),

charge as(
SELECT country, 
       DATA_FRMATE(trans_date,'%Y-%m') AS month_back, 
	   COUNT(trans_id) AS chargeback_count,
	   SUM(amount) AS chargeback_amount
FROM Chargebacks c
JOIN Transaction t
ON t.id=c.trans_id
GROUP BY DATA_FRMATE(trans_date,'%Y-%m'),country)

SELECT t.month, AS month, 
	   t.country AS country,
	   t.approved_count AS approved_count,
	   t.approved_amount AS approved_amount,
	   c.chargeback_count AS chargeback_count,
	   c.chargeback_amount AS chargeback_amount
FROM trans 
FULL JOIN charge 
ON trans.month = charge.month AND trans.country = charge.month
WHERE approved_count >0 or approved_amount >0 or chargeback_count>0 or chargeback_amount>0








Table: Transactions

+----------------+---------+
| Column Name    | Type    |
+----------------+---------+
| id             | int     |
| country        | varchar |
| state          | enum    |
| amount         | int     |
| trans_date     | date    |
+----------------+---------+
id is the primary key of this table.
The table has information about incoming transactions.
The state column is an enum of type ["approved", "declined"].
Table: Chargebacks

+----------------+---------+
| Column Name    | Type    |
+----------------+---------+
| trans_id       | int     |
| charge_date    | date    |
+----------------+---------+
Chargebacks contains basic information regarding incoming chargebacks from some transactions placed in Transactions table.
trans_id is a foreign key to the id column of Transactions table.
Each chargeback corresponds to a transaction made previously even if they were not approved.
 

Write an SQL query to find for each month and country, the number of approved transactions and their total amount, the number of chargebacks and their total amount.

Note: In your query, given the month and country, ignore rows with all zeros.

The query result format is in the following example:

Transactions table:
+------+---------+----------+--------+------------+
| id   | country | state    | amount | trans_date |
+------+---------+----------+--------+------------+
| 101  | US      | approved | 1000   | 2019-05-18 |
| 102  | US      | declined | 2000   | 2019-05-19 |
| 103  | US      | approved | 3000   | 2019-06-10 |
| 104  | US      | approved | 4000   | 2019-06-13 |
| 105  | US      | approved | 5000   | 2019-06-15 |
+------+---------+----------+--------+------------+

Chargebacks table:
+------------+------------+
| trans_id   | trans_date |
+------------+------------+
| 102        | 2019-05-29 |
| 101        | 2019-06-30 |
| 105        | 2019-09-18 |
+------------+------------+

Result table:
+----------+---------+----------------+-----------------+-------------------+--------------------+
| month    | country | approved_count | approved_amount | chargeback_count  | chargeback_amount  |
+----------+---------+----------------+-----------------+-------------------+--------------------+
| 2019-05  | US      | 1              | 1000            | 1                 | 2000               |
| 2019-06  | US      | 3              | 12000           | 1                 | 1000               |
| 2019-09  | US      | 0              | 0               | 1                 | 5000               |
+----------+---------+----------------+-----------------+-------------------+--------------------+
